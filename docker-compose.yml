# =============================================================================
# Reusable Configuration Anchors
# =============================================================================

x-x11-base: &x11-base
  environment:
    DISPLAY: ${DISPLAY:-:0}
    QT_X11_NO_MITSHM: "1"
    ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
    RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
  volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
  network_mode: host
  ipc: host

x-gpu-nvidia: &gpu-nvidia
  environment:
    RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
    NVIDIA_VISIBLE_DEVICES: ${NVIDIA_VISIBLE_DEVICES:-all}
    NVIDIA_DRIVER_CAPABILITIES: ${NVIDIA_DRIVER_CAPABILITIES:-graphics,utility,compute}
  gpus: '${DOCKER_GPUS:-all}'
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]



# =============================================================================
# Services
# =============================================================================

services:

  # ---------------------------------------------------------------------------
  # Development Containers (Student Workspaces)
  # ---------------------------------------------------------------------------

  dev_humble:
    build:
      context: ./ros2_humble
    container_name: dev_humble
    hostname: dev-humble
    profiles: [dev-humble]
    network_mode: host
    ipc: host
    environment:
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      ROS_DISTRO: humble
      XDG_RUNTIME_DIR: /tmp/runtime-dir
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./ros2_humble_ws:/root/ros2_ws:rw
      - ./config:/root/config:ro
      - ./scripts:/root/scripts:ro
    shm_size: 2gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    privileged: true
    stdin_open: true
    tty: true
    command: bash -c "source /opt/ros/humble/setup.bash && /root/scripts/entrypoint_humble.sh && tail -f /dev/null"

  dev_jazzy:
    build:
      context: ./ros2_jazzy
    container_name: dev_jazzy
    hostname: dev-jazzy
    profiles: [dev-jazzy]
    network_mode: host
    ipc: host
    environment:
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      ROS_DISTRO: jazzy
      XDG_RUNTIME_DIR: /tmp/runtime-dir
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./ros2_jazzy_ws:/root/ros2_ws:rw
      - ./config:/root/config:ro
      - ./scripts:/root/scripts:ro
    shm_size: 2gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    privileged: true
    stdin_open: true
    tty: true
    command: bash -c "source /opt/ros/jazzy/setup.bash && /root/scripts/entrypoint_jazzy.sh && tail -f /dev/null"

  # ---------------------------------------------------------------------------
  # GAZEBO Simulations
  # ---------------------------------------------------------------------------

  # ROSbot 2R/2 PRO + Gazebo (includes built-in RViz2)
  sim-gazebo-rosbot2r:
    image: husarion/rosbot-gazebo:humble
    container_name: sim-gazebo-rosbot2r
    profiles: [gazebo-rosbot2r]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      QT_QPA_PLATFORM: xcb
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: >
      ros2 launch rosbot_gazebo simulation.launch.py
        robot_model:=rosbot
        mecanum:=${MECANUM:-False}



  # ROSbot XL + Gazebo
  sim-gazebo-rosbotxl:
    image: husarion/rosbot-xl-gazebo:humble
    container_name: sim-gazebo-rosbotxl
    profiles: [gazebo-rosbotxl]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      QT_QPA_PLATFORM: xcb
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: >
      ros2 launch rosbot_xl_gazebo simulation.launch.py
        robot_model:=rosbot_xl
        mecanum:=${MECANUM:-True}
        camera_model:=intel_realsense_d435

  # Panther + Gazebo (includes built-in RViz2)
  sim-gazebo-panther:
    image: husarion/panther-gazebo:humble
    container_name: sim-gazebo-panther
    profiles: [gazebo-panther]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      QT_QPA_PLATFORM: xcb
    volumes:
      - ./config:/config:ro
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: ["ros2", "launch", "panther_gazebo", "simulation.launch.py", "components_config_path:=/config/panther_components.yaml"]

  # ROSbot XL + Manipulator (Gazebo + MoveIt2)
  sim-gazebo-rosbotxl-manip:
    image: husarion/rosbot-xl-manipulation-gazebo:humble
    container_name: sim-gazebo-rosbotxl-manip
    profiles: [gazebo-rosbotxl-manip]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      MECANUM: ${MECANUM:-True}
      ANTENNA_ROTATION_ANGLE: ${ANTENNA_ROTATION_ANGLE:--1.57}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./extra/rosbot-xl-manipulation/config/rosbot_xl.rviz:/ros2_ws/install/rosbot_xl_manipulation_moveit/share/rosbot_xl_manipulation_moveit/config/moveit.rviz
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: ["ros2","launch","rosbot_xl_manipulation_gazebo","simulation.launch.py","mecanum:=${MECANUM:-True}","antenna_rotation_angle:=${ANTENNA_ROTATION_ANGLE:--1.57}"]

  joy2twist-rosbotxl-manip:
    image: husarion/joy2twist:humble-1.0.0-20230204-stable
    container_name: joy2twist-rosbotxl-manip
    profiles: [gazebo-rosbotxl-manip]
    <<: *x11-base
    devices:
      - /dev/input
    volumes:
      - ./extra/rosbot-xl-manipulation/config/joy2twist.yaml:/joy2twist.yaml
    command: ["ros2","launch","joy2twist","gamepad_controller.launch.py","joy2twist_params_file:=/joy2twist.yaml"]




  # ---------------------------------------------------------------------------
  # WEBOTS Simulations
  # ---------------------------------------------------------------------------

  # ROSbot 2R + Webots
  sim-webots-rosbot2r:
    image: husarion/webots:humble
    container_name: sim-webots-rosbot2r
    profiles: [webots-rosbot2r]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      QT_QPA_PLATFORM: xcb
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: ros2 launch webots_ros2_husarion rosbot_launch.py

  # ROSbot XL + Webots
  sim-webots-rosbotxl:
    image: husarion/webots:humble
    container_name: sim-webots-rosbotxl
    profiles: [webots-rosbotxl]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      QT_QPA_PLATFORM: xcb
    stdin_open: true
    tty: true
    restart: unless-stopped
    command: ros2 launch webots_ros2_husarion rosbot_xl_launch.py

  # ---------------------------------------------------------------------------
  # O3DE Simulation
  # ---------------------------------------------------------------------------

  # ROSbot XL + O3DE
  sim-o3de-rosbotxl:
    build:
      context: ./o3de
    image: experimental_robotics/o3de:local
    container_name: sim-o3de-rosbotxl
    profiles: [o3de-rosbotxl]
    <<: [*x11-base, *gpu-nvidia]
    environment:
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-43}
      RMW_IMPLEMENTATION: ${ROS_RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}
      DISPLAY: ${DISPLAY:-:0}
      QT_X11_NO_MITSHM: "1"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: graphics,utility,compute
      VGL_DISPLAY: ${DISPLAY:-:0}
      VNC_PORT: ${O3DE_VNC_PORT:-5901}
      VNC_DISPLAY: ${O3DE_VNC_DISPLAY:-:1}
      VNC_RESOLUTION: ${O3DE_VNC_RESOLUTION:-1920x1080}
      VNC_DEPTH: ${O3DE_VNC_DEPTH:-24}
      O3DE_EXECUTABLE: ${O3DE_EXECUTABLE:-Editor}
      O3DE_ARGS: ${O3DE_ARGS:-}
      O3DE_ASSET_PROCESSOR: ${O3DE_ASSET_PROCESSOR:-1}
    stdin_open: true
    tty: true
    restart: unless-stopped
